name: ci

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths-ignore:
      - '*.md'
      - '.github/codeowners'
      - '.github/dependabot.yml'
      - '.github/pull_request_template.md'
      - '.github/stale.yml'
  pull_request_target:
    types: [ opened, synchronize, reopened, ready_for_review ]
    paths-ignore:
      - '*.md'
      - '.github/codeowners'
      - '.github/dependabot.yml'
      - '.github/pull_request_template.md'
      - '.github/stale.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, process it normally.
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    strategy:
      fail-fast: false
      matrix:
        service: [ spring-boot-app-template ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      id-token: write
      pull-requests: write # needed for comment updates
      security-events: write
    steps:

      - name: Git Checkout
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        # Do not trigger a checkout when opening PRs from a fork (helps avoid
        # "pwnn request". See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target )
        with:
          fetch-depth: 0

      - name: Dependabot Checkout
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          # Dependabot can only checkout at the HEAD of the PR branch
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          #Instead of manually configure caching of gradle, use an action which is provided. Details here: https://github.com/actions/setup-java
          cache: gradle

      - name: Check for Changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          filters: |
            source_code:
              - '.github/workflows/**'
              - '${{ matrix.service }}/src/**'
              - '${{ matrix.service }}/build.gradle.kts'
              - 'build.gradle.kts'
              - 'gradlew'
              - 'gradlew.bat'
              - 'settings.gradle.kts'

      - name: Gradle Test
        if: steps.changes.outputs.source_code == 'true'
        id: tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew build

  dependabot_auto_merge:
    if: ${{ github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    needs: ci
    steps:
      # If the PR is created by Dependabot run additional steps
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Approve a Dependabot PR
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-minor' ||
                steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        # Approving the PR and waiting for 5 sec to let GitHub UI to reflect the changes
        run: gh pr review --approve "$PR_URL" && sleep 5
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.REVIEWER_GITHUB_TOKEN }}

      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-minor' ||
                steps.metadata.outputs.update-type == 'version-update:semver-patch' }}
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
